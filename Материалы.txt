Можно обойтись без сервера 1с и постгреса в докере, если есть уже сервер 1с.

Последовательность для участников:
	1) Клонируем реп на свою машину, делаем свою ветку из мастера или форк, переключаемся на нее
	2) На готовой машине с докером клонируем тот же реп, переключаемся на свою ветку, разворачиваем сервер1с+постгрес+дженкинс		
		docker-compose -f docker-compose.yml up -d
		Собственно композ этот не для подуктива, больше как демо пример, позволяющий показать как вообще работает автодеплой и отладка
	3) Заводим базу на сервере 1с, загружаем из исходников и заводим пользователя с админскими правами
		Настраиваем файл hosts на слейве (слейв должен быть на windows)
		Сервер 1с по днс, сервер субд по ip		
	4) Заводим файловую базу и загружаем из исходников конфу (чтобы дальше производить изменения)
	5) Меняем файл дженкинс-деплой, помещаем в реп
		Например: clientLabel, v8server, v8serverRas		
	6) Запускаем дженкинс, настраиваем. (usr: user, pwd: bitnami)
		Создаем credentionals базы 1с
		Порт 9088 указать в глобальных настройках безопасности дженкинса. Это нужно, чтобы заработал Java web start у агента
		Настроить почту (опционально)
		Создать слейва дженкинса. 
			Настройки - управление средами - новый узел - permanent agent - запуск через Java web start
			Путь к корневой папке слейва прописать
	7) Создаем пайплайн в дженкинсе из гит
		checkout to subdirectory (По тому, что будем искать в этом каталоге исходники, чтобы не затирать то, что рядом)
	8) Настраиваем и запускаем слейва
		Деплойка и оскрипт должны быть. (http://oscript.io/docs/page/install opm install deployka)
		Необходим rac (средства администрирования в установщике 1с)
	9) Запускаем пайплайн
	10) Тестовый коммит с изменением